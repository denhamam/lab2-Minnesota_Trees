---
title: "Lab2-Minnesota_Trees"
format: html
editor: visual
self_contained: true
---

```{r}
library(dplyr)
library(tidyverse)
tree_data <- read.csv("data/tree_dat.csv")
glimpse(tree_data)
```

# Question 1: Read in the Minnesota tree growth dataset. Use glimpse to understand the structure and names of the dataset. Decribe the structure and what you see in the dataset?
```{r}
glimpse(tree_data)
#The structure has a lot of rows, like 131386, but only 8 columns. In the dataset I can see the treeID, standID, stand, year, species, age, inc, and rad_ib. Some of the columns are numeric and some are categorical
```

#Question 2: How many records have been made in stand 1?
```{r}
tree_data %>% 
  filter(stand == 1) %>% 
  summarize(count = n())
# zero records have been made in stand 1 
```

#Question 3: How many records of the Abies balsamea and Pinus strobus species have been made?
```{r}
tree_data %>% 
  filter(species %in% c("ABBA", "PIST")) %>% 
  group_by(species) %>% 
  summarize(count = n())
# 13033 records of Abies Balsame and 4188 records of Pinus Strobus has been made
```

#Question 4: How many trees are older then 200 years old in the last year of the dataset?
```{r}
tree_data %>% 
  filter(year == max_year, age > 200) %>% 
  summarize(count = n())
# 7 trees are olders then 200 years old in the last year of the dataset
```

#Question 5: What is the oldest tree in the dataset found using slice_max?
```{r}
oldest_tree <- tree_data %>%
  slice_max(age, n = 1)

print(oldest_tree)
#the oldest tree is 269 and is a PIRE
```

#Question 6: Find the oldest 5 trees recorded in 2001. Use the help docs to understand optional parameters
```{r}
trees_2001 <- tree_data %>%
  filter(year == 2001)
oldest_5_trees_2001 <- trees_2001 %>%
  slice_max(order_by = age, n = 5)
print(oldest_5_trees_2001)
#the 5 oldest trees recorded in 2001 are 263 (PIRE), 259 (PIRE), 212 (FRNI), 206 (FRNI), and 206 (FRNI)
```

#Question 7: Using slice_sample, how many trees are in a 30% sample of those recorded in 2002?
```{r}
trees_2002 <- tree_data %>%
  filter(year == 2002)
sampled_trees_2002 <- trees_2002 %>%
  slice_sample(prop = 0.3)
nrow(sampled_trees_2002)
#687 trees are in a 30% sample of those recorded in 2002
```

#Question 8: Filter all trees in stand 5 in 2007. Sort this subset by descending radius at breast height (rad_ib) and use slice_head() to get the top three trees. Report the tree IDs
```{r}
top_3_trees <- tree_data %>%
  filter(standID == 5, year == 2007) %>%
  arrange(desc(rad_ib)) %>%
  slice_head(n = 3)

top_3_trees$tree_id

# the top 3 tree IDs are 128, 157, 135
```

#Question 9: Reduce your full data.frame to [treeID, stand, year, and radius at breast height]. Filter to only those in stand 3 with records from 2007, and use slice_min to pull the smallest three trees meaured that year.
```{r}
smallest_trees <- tree_data %>%
  select(treeID, standID, year, rad_ib) %>%
  filter(standID == 3, year == 2007) %>%
  slice_min(order_by = rad_ib, n = 3)

print(smallest_trees)
```

#Question 10: Use select to remove the stand column. Use glimspe to show the dataset
```{r}
tree_data %>%
  select(-stand) %>%
  glimpse()
```

#Question 11: Look at the help document for dplyr::select and examine the “Overview of selection features”. Identify an option (there are multiple) that would help select all columns with the string “ID” in the name. Using glimpse to view the remaining dataset
```{r}
tree_data %>%
  select(contains("ID")) %>%
  glimpse()
```

#Question 12: Find a selection pattern that captures all columns with either ‘ID’ or ‘stand’ in the name. Use glimpse to verify the selection.
```{r}
tree_data %>%
  select(matches("ID|stand")) %>%
  glimpse()
```

#Question 13: Looking back at the data dictionary, rename rad_inc and inc to include _[unit] in the name. Unlike earlier options, be sure that this renaming is permanent, and stays with your data.frame (e.g. <-). Use glimpse to view your new data.frame.
```{r}
tree_data <- tree_data %>%
  rename(rad_ib_unit = rad_ib, inc_unit = inc)

glimpse(tree_data)
```

#Question 14: A key measurement in forestry in “basal area column”. The metric is computed with the formula: BA(m2) = 0.00007854⋅DBH^2, Where DBH is the diameter at breast height (cm). Use mutate to compute DBH in centimeters, and BA in m2 (HINT: Make sure rad_ib is in cm prior to computing the diameter!). What is the mean BA_m2 of the the species POTR in 2007?
```{r}
tree_data <- tree_data %>%
  mutate(
    DBH_cm = 2 * rad_ib_unit, BA_m2 = 0.00007854 * DBH_cm^2
  )
potr_2007 <- tree_data %>%
  filter(species == "POTR", year == 2007)
mean_BA_potr_2007 <- mean(potr_2007$BA_m2, na.rm = TRUE)
mean_BA_potr_2007
# The mean BA_m2 of POTR in 2007 is 3.696619
```

#Question 15: Lets say for the sake of our study, trees are not established until they are 5 years of age. Use if_else to add a boolean column to our dataset called established that is TRUE if the age is greater then 5 and FALSE if less then or equal to five. Once added, use count (see ?count) to determine how many records are from estabilshed trees?
```{r}
tree_data <- tree_data %>%
  mutate(established = if_else(age >5, TRUE, FALSE))
established_count <- tree_data %>%
  count(established)
print(established_count)
# There are 122503 records from established trees 
```

#Question 16: Use mutate and case_when to add a new column to you data.frame that classifies each tree into the proper DBH_class. Once done, limit your dataset to the year 2007 and report the number of each class with count.
```{r}
dbh_counts <- tree_data %>%
  mutate(
    DBH_cm = 2 * rad_ib_unit,
    DBH_class = case_when(
      DBH_cm < 10 ~ "sapling",
      DBH_cm >= 10 & DBH_cm <= 30 ~ "pole",
      DBH_cm > 30 ~ "sawlog",
      TRUE ~ "NA_character_"
    )
  ) 
tree_2007 <- tree_data %>%
  filter(year == 2007)
dbh_counts <- tree_2007 %>%
  count(DBH_class)
print(dbh_counts)
# There are 2291 sawlogs in 2007
```

#Question 17: Compute the mean DBH (in cm) and standard deviation of DBH (in cm) for all trees in 2007. Explain the values you found and their statistical meaning.
```{r}
tree_2007 <- tree_data %>%
  filter(year == 2007)
dbh_stats <- tree_2007 %>%
  summarise(
    mean_DBH = mean(DBH_cm, na.rm = TRUE),
    sd_DBH = sd(DBH_cm, na.rm = TRUE)
  )
print(dbh_stats)
# The mean_DBH is 160.9351 which is the average diameter at breast height of the trees in 2007. The sd_DBH is 61.38643 which is how spread out the diameter of breast height is 
```

#Question 18: Compute the per species mean tree age using only those ages recorded in 2003. Identify the three species with the oldest mean age.
```{r}
tree_2003 <- tree_data %>%
  filter(year == 2003)
species_mean_age <- tree_2003 %>%
  group_by(species) %>%
  summarise(mean_age = mean(age, na.rm = TRUE)) %>%
  arrange(desc(mean_age))  
oldest_species <- species_mean_age %>%
  slice_head(n = 3)
print(oldest_species)
# The three oldest tree species are THOC, FRNI, and PIST. THOC has a mean age of 126.63 years, FRNI has a mean age of 83 years, and PIST has a mean age of 73 years
```

#Question 19: In a single summarize call, find the number of unique years with records in the data set along with the first and last year recorded?
```{r}
year_stats <- tree_data %>%
  summarise(
    unique_years = n_distinct(year),
    first_year = min(year, na.rm = TRUE),
    last_year = max(year, na.rm = TRUE))
print(year_stats)
```

#Question 20: Determine the stands with the largest number of unique years recorded. Report all stands with largest (or tied with the largest) temporal record.
```{r}
stand_year_counts <- tree_data %>%
  group_by(stand) %>%
  summarise(unique_years = n_distinct(year)) 
max_years <- max(stand_year_counts$unique_years)
largest_temporal_stands <- stand_year_counts %>%
  filter(unique_years == max_years)
print(largest_temporal_stands)
```

#Final Question:Use a combination of dplyr verbs to compute these values and report the 3 species with the fastest growth, and the 3 species with the slowest growth. (** You will need to use either lag() or diff() in your compuation. You can learn more about each in the Help pages) - Lastly, find and include an image of the fastest growing species. Add the image to your images directory.
```{r}
tree_growth <- tree_data %>%
  arrange(species, treeID, year) %>% 
  group_by(species, treeID) %>%
  mutate(
    annual_growth = DBH_cm - lag(DBH_cm)
  ) %>%
  ungroup()
species_growth <- tree_growth %>%
  group_by(species) %>%
  summarise(mean_growth = mean(annual_growth, na.rm = TRUE)) %>%
  arrange(mean_growth)
slowest_species <- species_growth %>% slice_head(n = 3)
fastest_species <- species_growth %>% slice_tail(n = 3)

print("Slowest growing species:")
print(slowest_species)

print("Fastest growing species:")
print(fastest_species)
  

  
```



















